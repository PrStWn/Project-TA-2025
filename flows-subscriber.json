[
    {
        "id": "a957b3ebf59a375e",
        "type": "tab",
        "label": "Subscriber",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "76afa8c8948e83fc",
        "type": "ui_gauge",
        "z": "a957b3ebf59a375e",
        "name": "",
        "group": "a5948e74b78c064d",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Suhu",
        "label": "Â°C",
        "format": "{{value}}",
        "min": "-40",
        "max": "80",
        "colors": [
            "#b30036",
            "#d41111",
            "#e2033b"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 80,
        "wires": []
    },
    {
        "id": "3b9adebe27e14f5e",
        "type": "ui_gauge",
        "z": "a957b3ebf59a375e",
        "name": "",
        "group": "76325a4a67c93f80",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Kelembaban",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#002db3",
            "#004de6",
            "#3a4acb"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 180,
        "wires": []
    },
    {
        "id": "4dce42a474e9abf7",
        "type": "join",
        "z": "a957b3ebf59a375e",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "1",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 450,
        "y": 280,
        "wires": [
            [
                "9c3a5d1d5daa67dc",
                "53ebe67fa3b5573e"
            ]
        ]
    },
    {
        "id": "9c3a5d1d5daa67dc",
        "type": "function",
        "z": "a957b3ebf59a375e",
        "name": "function validation",
        "func": "const aeskey = Buffer.from(\"01020304050607080910111213141516\", \"hex\");\nconst iv = Buffer.alloc(16, 0);\nconst preSharedSalt = \"#y0uR$3cr3t54Lt*1sH3R3*\";\n\nlet resendData = global.get(\"resendData\") || {};\n\nfunction calculateChecksum(data) {\n    let hash = crypto.createHash(\"sha256\").update(data, \"utf8\").digest();\n\n    let checksum = \"\";\n    for (let i = 0; i < hash.length; i++) {\n        checksum += hash[i].toString(16);\n    }\n    return checksum;\n}\n\nfunction decryptAES(base64Data,aeskey, iv) {\n    try {\n        const decipher = crypto.createDecipheriv(\"aes-128-cbc\", aeskey, iv);\n        decipher.setAutoPadding(false);\n        let decrypted = decipher.update(Buffer.from(base64Data, \"base64\"));\n        decrypted = Buffer.concat([decrypted, decipher.final()]);\n        return decrypted.toString(\"utf8\").replace(/\\0/g, '').trim();\n    } catch (error) {\n        return null;\n    };\n}\n\nlet encryptedTemp = msg.payload[\"/ESP32/IotTopic/temp\"];\nlet encryptedHum = msg.payload[\"/ESP32/IotTopic/hum\"];\nlet receivedChecksum = msg.payload[\"/ESP32/IotTopic/checksum\"];\nlet id = msg.payload[\"/ESP32/IotTopic/id\"];\n\nlet data = `${encryptedTemp}${encryptedHum}${preSharedSalt}`;\nlet recalculatedChecksum = calculateChecksum(data);\n\nif (recalculatedChecksum !== receivedChecksum) {\n    if (!resendData[id] || resendData[id] !== \"requested\") {\n        resendData[id] = \"request telah dilakukan\";\n        global.set(\"resendDataID\", resendData);\n\n        node.send({ topic: \"/ESP32/IotTopic/resend\", payload: \"resend\" });\n    }\n    msg.payload = `<div style=\"white-space: pre-wrap;\">\n    Status: <b>Data Manipulated!</b><br>\n    Dekripsi: Ciphertext tidak valid, Proses Dekripsi dibatalkan.<br><br>\n    Data:<br>\n        ID${id}<br>\n        EncryptedTemp: ${encryptedTemp}<br>\n        EncryptedHum: ${encryptedHum}<br>\n        Received-Checksum: ${receivedChecksum}<br>\n        Recalculated-Checksum: ${recalculatedChecksum}\n    </div>`;\n    return msg;\n}\n\nif (resendData[id]) {\n    delete resendData[id];\n    global.set(\"resendDataID\", resendData);\n}\n\nlet temp, hum;\ntry {\n    temp = parseFloat(decryptAES(encryptedTemp, aeskey, iv)).toFixed(1);\n    hum = parseFloat(decryptAES(encryptedHum, aeskey, iv)).toFixed(1);\n} catch (err) {\n    msg.payload = `Status: Error<br> Deskripsi: Gagal mendekripsi data. Error: ${err.message}`;\n    return msg;\n}\n\nmsg.payload = `<div style=\"white-space: pre-wrap;\">\n    Status: <b>Data Valid</b><br><br>\n    Data:<br>\n    ID${id}<br>\n    Temperature: ${temp}<br>\n    Humidity: ${hum}<br>\n    Recalculated-Checksum-SHA256: ${recalculatedChecksum}\n    </div>`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 690,
        "y": 280,
        "wires": [
            [
                "45f91dcf2a17b3ba",
                "9d6141de2689884d",
                "afac93d5b1641593"
            ]
        ]
    },
    {
        "id": "4ea73fb76ed01c2e",
        "type": "function",
        "z": "a957b3ebf59a375e",
        "name": "checksum-function",
        "func": "let checksum = msg.payload;\n\nmsg.payload = \"Received-Checksum-Sha256: \" + checksum;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 480,
        "wires": [
            [
                "e431f4c42a251171"
            ]
        ]
    },
    {
        "id": "e431f4c42a251171",
        "type": "ui_text",
        "z": "a957b3ebf59a375e",
        "group": "5f75ef55d9b76029",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Checksum SHA-256",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 840,
        "y": 480,
        "wires": []
    },
    {
        "id": "45f91dcf2a17b3ba",
        "type": "ui_template",
        "z": "a957b3ebf59a375e",
        "group": "a41d20d250dc7806",
        "name": "Validasi Data",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\" style=\"overflow: hidden; height: 250px;\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "72434297a8702096",
        "type": "mqtt in",
        "z": "a957b3ebf59a375e",
        "name": "",
        "topic": "/ESP32/IotTopic/hum",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "24b86eae4445a429",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 280,
        "wires": [
            [
                "4dce42a474e9abf7"
            ]
        ]
    },
    {
        "id": "a7ab58ce74b33558",
        "type": "mqtt in",
        "z": "a957b3ebf59a375e",
        "name": "",
        "topic": "/ESP32/IotTopic/temp",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "24b86eae4445a429",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "4dce42a474e9abf7"
            ]
        ]
    },
    {
        "id": "91d1432d159088ec",
        "type": "mqtt in",
        "z": "a957b3ebf59a375e",
        "name": "",
        "topic": "/ESP32/IotTopic/checksum",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "24b86eae4445a429",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 380,
        "wires": [
            [
                "4dce42a474e9abf7",
                "4ea73fb76ed01c2e"
            ]
        ]
    },
    {
        "id": "53ebe67fa3b5573e",
        "type": "function",
        "z": "a957b3ebf59a375e",
        "name": "function decrypt",
        "func": "const aeskey = Buffer.from(\"01020304050607080910111213141516\", \"hex\");\nconst iv = Buffer.alloc(16, 0);\n\nfunction decryptAES(base64Data, aeskey, iv) {\n    const decipher = crypto.createDecipheriv(\"aes-128-cbc\", aeskey, iv);\n    decipher.setAutoPadding(false);\n    let decrypted = decipher.update(Buffer.from(base64Data, \"base64\"));\n    decrypted = Buffer.concat([decrypted, decipher.final()]);\n    return decrypted.toString(\"utf8\").replace(/\\0/g, '').trim();\n}\n\ntry {\n    let tempEnc = msg.payload[\"/ESP32/IotTopic/temp\"];\n    let humEnc = msg.payload[\"/ESP32/IotTopic/hum\"];\n\n    let temp = parseFloat(decryptAES(tempEnc, aeskey, iv)).toFixed(1);\n    let hum = parseFloat(decryptAES(humEnc, aeskey, iv)).toFixed(1);\n\n    msg.payload = {\n        temp: temp,\n        hum: hum\n    };\n\n    return msg;\n} catch (err) {\n    msg.payload = `Status: Error<br> Deskripsi: Gagal mendekripsi data. Error: ${err.message}`;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 660,
        "y": 140,
        "wires": [
            [
                "2d8d3fd81e0972b5",
                "20f4b421460db54b"
            ]
        ]
    },
    {
        "id": "2d8d3fd81e0972b5",
        "type": "function",
        "z": "a957b3ebf59a375e",
        "name": "Decrypt Temperature",
        "func": "msg.payload = parseFloat(msg.payload.temp);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 80,
        "wires": [
            [
                "76afa8c8948e83fc"
            ]
        ]
    },
    {
        "id": "20f4b421460db54b",
        "type": "function",
        "z": "a957b3ebf59a375e",
        "name": "Decrypt Humidity",
        "func": "msg.payload = parseFloat(msg.payload.hum);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 180,
        "wires": [
            [
                "3b9adebe27e14f5e"
            ]
        ]
    },
    {
        "id": "9d6141de2689884d",
        "type": "mqtt out",
        "z": "a957b3ebf59a375e",
        "name": "",
        "topic": "/ESP32/IotTopic/resend",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "24b86eae4445a429",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "99363f458bcdd922",
        "type": "mqtt in",
        "z": "a957b3ebf59a375e",
        "name": "",
        "topic": "/ESP32/IotTopic/id",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "24b86eae4445a429",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "4dce42a474e9abf7"
            ]
        ]
    },
    {
        "id": "afac93d5b1641593",
        "type": "debug",
        "z": "a957b3ebf59a375e",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 340,
        "wires": []
    },
    {
        "id": "a5948e74b78c064d",
        "type": "ui_group",
        "name": "Suhu",
        "tab": "2b39e3ec949b6b95",
        "order": 1,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "76325a4a67c93f80",
        "type": "ui_group",
        "name": "Kelembaban",
        "tab": "2b39e3ec949b6b95",
        "order": 2,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f75ef55d9b76029",
        "type": "ui_group",
        "name": "Checksum SHA-256",
        "tab": "2b39e3ec949b6b95",
        "order": 3,
        "disp": true,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a41d20d250dc7806",
        "type": "ui_group",
        "name": "Validasi-Data",
        "tab": "2b39e3ec949b6b95",
        "order": 4,
        "disp": true,
        "width": "22",
        "collapse": false,
        "className": ""
    },
    {
        "id": "24b86eae4445a429",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2b39e3ec949b6b95",
        "type": "ui_tab",
        "name": "Subscriber Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]